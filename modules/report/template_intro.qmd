---
engine: knitr
params:
  analysis_name: 'omicron analysis'
  adapter_r1: param_adapter_r1
  adapter_r2: param_adapter_r2
---

# Introduction

This report contains the analysis of the `r params$analysis_name`. There are two parts to the analysis workflow: pre-processing and the downstream analyses.\

## Pre-processing {#pre_processing}

The raw illumina sequencing data was pre-processed using [NanoLogix](https://github.com/kzeglinski/nanologix/).

```{mermaid}
%%{
  init: {
    'theme': 'base',
    'themeVariables': {
      'primaryColor': '#BB2528',
      'primaryTextColor': '#fff',
      'primaryBorderColor': '#7C0000',
      'lineColor': '#F8B229',
      'secondaryColor': '#006100',
      'tertiaryColor': '#fff'
    }
  }
}%%
flowchart TD
import["Bring in read pairs (using sample sheet)"] --> trim["Trim reads (with trimgalore)"]
trim --> merge["Merge reads (with FLASH)"]
merge --> seqQC["QC of sequencing run (with multiQC)"]
merge --> annotate["Annotate nanobodies (with IgBLAST)"]
merge --> ppassing["Check % of reads passing trim/merge"]
annotate --> processing["Processing of IgBLAST output"]
```

Briefly, the steps involved:

1.  Reading in a sample sheet that contains the sample ID, alpaca ID, antigen, panning round, replicate ID and the names of the R1 and R2 FASTQ files

2.  Adapter and quality trimming (\>Q20) using trimgalore[@krueger2021] v0.6.7. This process also removes adapter dimers from the data. Note: The adapters are `r params$adapter_r1` (R1) and `r params$adapter_r2` (R2)

3.  Merging R1 and R2 using FLASH[@Magoc2011] v1.2.11 to create complete nanobody sequences

4.  Some sequencing run quality control: **(a)** running multiQC[@Ewels2016] v1.14 on the fastqQC reports generated by trimgalore[@krueger2021] v0.6.7 and **(b)** calculating the percentage of reads remaining in the sample after the trimming and merging steps (which is a measure of the libraries most severely affected by adapter dimers)

5.  Annotating nanobody sequences using IgBLAST[@Ye2013] v1.19.0, with a custom reference database built using IMGT's *Vicugna pacos* reference sequences

6.  Processing of IgBLAST output in R to produce more manageable subsets of the data that will be used in the following sections of this report\

## R packages {#r_packages}

All of the downstream analysis was done in R, using the following packages:

-   vroom[@vroom] to read in data

-   dplyr[@dplyr] and tidyr[@tidyr] to wrangle data

-   stringr[@stringr] for manipulating text

-   ggplot2[@ggplot2] for visualisation, with the extensions ggside[@ggside] (for adding marginal densities) and ggupset[@ggupset] (for making upset plots)

-   gt[@gt] for generating nice looking tables

-   CellaRepertorium[@CellaRepertorium] for an R wrapper to the CD-HIT clustering program

-   stringdist[@stringdist] for measuring the similarity between CDR3s

-   crosstalk[@crosstalk], DT[@DT] and plotly[@plotly] for making interactive plots to visualise the landscape of enriched clusters

-   irlba[@irlba] and distances[@distances] for performing PCA and cluster analysis

-   Biostrings[@Biostrings] for pairwise sequence alignments
