# Enrichment across panning rounds

Now that the QC is completed, we can move on to looking for sequences that are enriched across the panning rounds! In this section, each pan has its own page, but the data is processed the same way.\
<!--# TODO: condense this section down if possible, it's a bit wordy -->

## Method

### Finding enriched sequences {#sec-enrichedmethod}

1.  **Reading in all productive CDR3 (with a count \> 1)**

    Only productive reads without unknown (X) amino acids and with a CDR3 count of \> 1 (on a per-sample basis) are included in the analysis. This helps to minimise the impact of sequencing errors.*\
    \
    *Counts are standardised as counts per million (CPM) to account for different sequencing depths across samples. This is done by determining the proportion of each sample a given CDR3 makes up, and multiplying by 1,000,000 (we could also work with the proportions, but CPM are easier to conceptualise)

2.  **Adding in R0 counts from previous MGI data**

    The R0 libraries for Alpacas 1, 8, 10 and 19 were sequenced previously (in the second MiSeq and MGI runs). Given the shallow depth of the MiSeq data, we will use the MGI R0 data as it captures a much greater fraction of the library diversity.

3.  **Creating a count matrix**

    We convert the long-form count data (where there is one row for each CDR3 in each sample, and so the same CDR3 can appear multiple times across multiple samples) into a wide-form count matrix. In this data structure, each unique CDR3 has its own row, and the columns represent the counts across different samples (R0, R1_Rep1, R2_Rep1, etc).\
    As part of this step, CDR3 which were not observed in R0 are given a count of 0, because we can't calculate fold changes when NA (missing) values are present. **However**, CDR3 not observed in other rounds are left as NA. We chose to do this because (1) we believe it is best not to impute the data too much and (2) if something is present in R0 and drops out in later rounds, we wouldn't be interested in that sequence anyway.

4.  **Calculating log fold change**

    To measure enrichment, we calculate the log fold change (logFC) using the following formula:

    $$
    log2(\frac{x + 10}{y + 10})
    $$\
    Where $x$ is the CPM in the later round (for example, R2) and $y$ is the CPM in the earlier round (for example, R0). We add 10 to both the numerator and denominator in order to temper the effects of low counts. For example, the logFC between 5 and 1 is 2.32, whereas between 15 and 11 it is only 0.45. This provides a better reflection of the true enrichment.

5.  **Filtering to only the enriched sequences**

    Before proceeding with clustering, we filter to only the enriched CDR3s (definition: positive logFC in at least one replicate). Filtering before clustering helps to avoid the potential problem of similar CDR3s cancelling out one another when one is enriched and one isn't.

6.  **Clustering the data**

    Then, clustering is performed to collapse similar sequences. For each enriched CDR3, the most abundant full-length amino acid sequence was selected, and these were clustered at 90% identity using using CD-HIT[@Li2006] (through the R package CellaRepertorium[@CellaRepertorium]). Sequences were required to be within 90% length of one another, and sequences less than 110 AA were not clustered.

7.  **Collapsing the count matrix by clusters**

    The count matrix created in step 3 was then collapsed by cluster. That is, counts for all members in a cluster were added, and new logFC based on these combined counts were calculated (as in step 4). A 'lead' CDR3 was chosen to represent each cluster, based on abundance in round 2 (maximum CPM across all replicates).

8.  **Applying a minimum abundance cutoff**

    Although we want to preserve as many of the clusters as possible (in order to capture the greatest possible diversity), it is important to be aware of the potential for false positives, particularly when the CPM is low. Thus, any clusters with an abundance of less than 10 CPM (0.001%) in in all round 2 replicates are removed.

### Choosing a top 100

From the enriched sequences, we can then choose our top 100 sequences. In the following section, this will be done by either:

1.  **Picking so as to maximise sequence diversity**

    Only clones with a round 0 to round 2 logFC > 1 (in any replicate) are considered in this step. Pairwise alignment (global, using a BLOSUM62 matrix, gap opening penalty of -10 and gap extension penalty of -1) is used to compare CDR3 sequences and cluster them into 100 groups that will maximise sequence diversity.\

2.  **Picking the most enriched clusters**

    CDR3 sequences are first clustered at an 80% identity threshold. Then, the maximum overall (round 0 to round 2) logFC across replicates is used to sort the CDR3 sequences from most to least enriched.\

Both options are provided, and you can compare them using the interactive PCA plots!\

### Generating full-length nucleotide sequences

Full-length nucleotide sequences for each of the top 100 clones are generated by extracting the most abundant nucleotide sequence corresponding to that CDR3 in round 2, and then replacing any missing conserved nucleotides at the very 5' and 3' ends.

<details class="secondaryDetails">

<summary>Why are nucleotides missing?</summary>

<p>Due to the location of the restriction enzymes used during library preparation, some parts of the highly conserved FR1 and FR4 regions may be missing. These are added back in from the reference in order to complete the full nanobody sequence.</p>

</details>